plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.2.0'
}

group = 'site.leesoyeon'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl {
        extendsFrom compileClasspath
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation 'org.apache.avro:avro:1.11.0'
    implementation 'io.confluent:kafka-avro-serializer:7.3.3'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.projectreactor:reactor-core'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.redisson:redisson-spring-boot-starter:3.23.5'
    implementation 'org.springframework.integration:spring-integration-redis:5.5.15'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


def querydslDir = "$buildDir/generated/sources/querydsl"

sourceSets {
    main {
        java {
            srcDir querydslDir
        }
    }
}


tasks.named('compileJava') {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    enabled = false
    useJUnitPlatform()
}